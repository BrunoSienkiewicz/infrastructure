apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-replica
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: "postgres-replica"
  replicas: 3
  template:
    metadata:
      labels:
        app: postgres-replica
    spec:
      terminationGracePeriodSeconds: 30
      initContainers:
        - name: init
          image: postgres:15.0
          command:
            - sh
              -c
            - |
              if [ -z "$(ls -A /var/lib/postgresql/data/pgdata)" ]; then
                echo "Running pg_basebackup to catch up replication server...";
                pg_basebackup -R -h postgres -D /var/lib/postgresql/data/pgdata -P -U replicationuser;
                chown -R postgres:postgres $PGDATA;
              else
                echo "Skipping pg_basebackup because directory is not empty"; 
              fi
          args:
            - |
              #create archive directory
              mkdir -p /data/archive && chown -R 999:999 /data/archive
          volumeMounts:
            - name: data
              mountPath: /data
              readOnly: false
      containers:
        - name: postgres
          image: postgres:15.0
          args: ["-c", "config_file=/config/replica.conf"]
          ports:
            - containerPort: 5432
              name: database
          env:
            - name: PGDATA
              value: "/data/pgdata-replica"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: POSTGRES_USER
                  optional: false
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: POSTGRES_PASSWORD
                  optional: false
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: POSTGRES_DB
                  optional: false
          volumeMounts:
            - name: config
              mountPath: /config
              readOnly: false
            - name: data
              mountPath: /data
              readOnly: false
      volumes:
        - name: config
          configMap:
            name: postgres
            defaultMode: 0755
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: postgres-storage
        resources:
          requests:
            storage: 100Mi
